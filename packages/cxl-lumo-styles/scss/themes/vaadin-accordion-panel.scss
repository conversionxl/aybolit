@use "../mq";

// @todo Maybe kill. Upstream only pads with `[theme="filled"]`?
:host(:not([theme~="reverse"])) {
  [part="content"] {
    padding-left: var(--lumo-space-m);
  }
}

[part="summary"] {
  border-radius: unset;
}

/**
 * We want form elements in panel summary to catch all space.
 * It's unexpected if panel opens, but input element doesn't change.
 */
[part="summary-content"] {
  flex-basis: 100%;
}

/**
 * Modify toggle visibility.
 */
[part="toggle"] {
  padding: var(--lumo-space-xs);

  :host(:not([theme~="vaadin"])) & {
    background-color: var(--lumo-shade-10pct);
    border-radius: 50%;
  }

  :host(:not([theme~="vaadin"])[opened]) & {
    color: var(--lumo-primary-color);
    background-color: var(--lumo-primary-color-10pct);
  }

  :host([disabled]) & {
    display: none;
  }
}

// @see https://github.com/vaadin/vaadin-details/blob/v1.0.1/theme/lumo/vaadin-details-styles.html#L57
@media (hover: hover) {
  :host(:not([disabled])) {
    [part="summary"]:hover {
      [part="toggle"] {
        color: var(--lumo-primary-color);
      }
    }
  }
}

/**
 * Theme "cxl-minidegree-track".
 */
:host([theme~="cxl-minidegree-track"]) {
  margin-top: var(--lumo-space-l);
  border-bottom: unset;

  [part="content"] {
    padding-left: unset;
  }

  [part="summary"] {
    --vaadin-accordion-panel-border-bottom: solid 1px;
    padding-top: var(--lumo-space-m);
    padding-bottom: var(--lumo-space-m);
    border-bottom: var(--vaadin-accordion-panel-border-bottom) transparent;

    &:hover {
      background-color: var(--lumo-primary-color-2pct);
      border-bottom-color: var(--lumo-primary-color-10pct);
    }
  }

  [part="toggle"] {
    margin-right: var(--lumo-space-m);
    font-size: var(--lumo-icon-size-m);
  }
}

/**
 * Theme "cxl-minidegree-course".
 */
:host([theme~="cxl-minidegree-course"]) {
  [part="content"] {
    padding-right: var(--lumo-space-m);
  }

  [part="summary"] {
    --cxl-minidegree-course-border: solid 1px transparent;
    padding: var(--lumo-space-l) var(--lumo-space-m);
    border-top: var(--cxl-minidegree-course-border);
    border-bottom: var(--cxl-minidegree-course-border);
  }
}

:host([theme~="cxl-minidegree-course"][opened]) {
  [part="summary"] {
    background-color: var(--lumo-primary-color-2pct);
    border-top-color: var(--lumo-primary-color);
    border-bottom-color: var(--lumo-primary-color-10pct);
  }
}

/**
 * Theme "cxl-faq".
 */
:host([theme~="cxl-faq"]) {
  border-bottom: 0;

  [part="toggle"] {
    margin-right: var(--lumo-space-m);
    color: var(--lumo-base-color);
    background-color: var(--lumo-shade);
    border-radius: var(--lumo-border-radius);

    &::before {
      content: var(--lumo-icons-plus);
    }
  }
}

:host([theme~="cxl-faq"][opened]) {
  [part="toggle"] {
    color: var(--lumo-base-color);
    background-color: var(--lumo-primary-color);
    border-radius: var(--lumo-border-radius);
    transform: rotate(0deg);

    &::before {
      content: var(--lumo-icons-minus);
    }
  }

  [part="summary-content"] {
    text-decoration: underline;
  }

  [part="content"] {
    padding-left: calc(var(--lumo-icon-size-m) + var(--lumo-space-m));
  }
}

@media (hover: hover) {
  :host([theme~="cxl-faq"][opened]:not([disabled])) {
    [part="summary"]:hover {
      [part="toggle"] {
        color: var(--lumo-base-color);
      }
    }
  }
}

@media (hover: hover) {
  :host([theme~="cxl-faq"][opened]:not([disabled])) {
    [part="summary"]:hover {
      [part="toggle"] {
        color: var(--lumo-shade);
      }
    }
  }
}

/**
 * Theme "cxl-playbook-accordion".
 */
:host([theme~="cxl-playbook-accordion"]) {
  [part="content"] {
    padding-top: 0;
    padding-bottom: 0;
    padding-left: var(--lumo-space-l);
    margin-bottom: var(--lumo-space-l);

    @media #{mq.$small} {
      margin-left: calc(var(--lumo-space-l) + var(--lumo-space-xs));
      box-shadow: -1px 0 0 0 var(--lumo-contrast-10pct); // Match vaadin-tabs[orientation="vertical"].
    }
  }

  [part="summary"] {
    padding-top: var(--lumo-space-m);
    padding-bottom: var(--lumo-space-m);
  }
}
