/**
 * JW Custom Plugin: Chapters
 * Description: Jump to chapters within a lesson.
 * ID: cxlJWChapters
 * Author: kyle@cxl.com
 * Dependencies: none
 */

(() => {
    class plugin {
        constructor(player) {

            /**
             * Set global variables for chapters functionality.
             */
            const media_id = player.id.substring(13, this.length);
            const path = window.cxlJWPlayerData[media_id].path;
            let chapters_overlay = null;
            let close_chapter_nav = null;

            /**
             * Get the overlay container generated by JW.
             * Get the chapter cues from the player and build the overlay.
             * Add the toggle button to the player UI.
             */
            player.on('firstFrame', () => {
                chapters_overlay = document.getElementById(`${player.id}_cxlJWChapters`);
                const chapters = player.getCues();

                if (!chapters.length) {
                    return;
                }

                /**
                 * Build the close button and append to overlay.
                 *
                 * @type {HTMLAnchorElement}
                 */
                close_chapter_nav = document.createElement('a');
                close_chapter_nav.setAttribute('id', 'close_chapter_nav');
                close_chapter_nav.setAttribute('class', 'hidden');
                close_chapter_nav.innerHTML = `&#10005;`;
                chapters_overlay.appendChild(close_chapter_nav);

                /**
                 * Build chapter nav container, links, and setup event listeners.
                 * Add the toggle button to JW Player UI.
                 *
                 * @type {HTMLDivElement}
                 */
                const chapter_nav = document.createElement('div');
                chapter_nav.setAttribute('id', 'chapterNav');
                chapter_nav.setAttribute('class', 'chapters');

                chapter_nav.innerHTML = `${buildChapterNav(chapters)}`;

                chapters_overlay.appendChild(chapter_nav);
                chapters_overlay.setAttribute('class', 'chapters-overlay jw-plugin jw-reset hidden');
                close_chapter_nav.classList.toggle('hidden');

                close_chapter_nav.addEventListener( 'click', (e) =>{
                    toggleChapterOverlay();
                });

                chapter_nav.addEventListener('click', (e) => {
                    if (e.target.id.startsWith('chapter')) {
                        let i = Number(e.target.id.replace('chapter', ''));
                        toggleChapterOverlay();
                        player.seek(chapters[i].begin).play();
                    }
                });

                player.addButton(
                    path + 'images/chapter-bookmark-icon.svg',
                    'Show Chapters',
                    toggleChapterOverlay,
                    'toggle-chapters'
                );

            });

            /**
             * Build chapter nav UL element
             *
             * @param chapters
             * @returns {string}
             */
            function buildChapterNav(chapters) {
                let list = '';
                chapters.forEach((chapter, i) => {
                    list += `<li id="chapter${i}" class="chapterItem">${chapter.text}</li>`;
                });
                return `<ul>${list}</ul>`;
            };

            function toggleChapterOverlay() {
                chapters_overlay.classList.toggle('hidden');
            };

        }

    }

    plugin.version = '1.0.0';

    const registerPlugin = window.jwplayerPluginJsonp || window.jwplayer().registerPlugin;

    registerPlugin('cxlJWChapters', '1.0.0', plugin);

})();
